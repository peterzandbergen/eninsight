package pvfile

import (
	"bytes"
	"io"
	"testing"
)

const (
	File10Lines = `"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:04,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:09,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:16,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:21,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:28,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:33,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:40,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:45,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:51,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:57,2019","0.05","904.90"
`

	File10LinesOneEmpty = `"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:04,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:09,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:16,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:21,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:28,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:33,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:40,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:45,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:51,2019","0.05","904.90"
"'NLNN3020186F5208","11.70","9.60","0","0.00","0.00","0","233.30","0.00","0.00","0.40","0.00","0.00","0","0","0","50.01","32.40","May.01 00:57,2019","0.05","904.90"
asdfadfadf
`
)

func TestFile10Lines(t *testing.T) {

	r := bytes.NewBufferString(File10Lines)

	s := NewScanner(r)

	var i int
	var err error
	// Scan until error is not nil
	for _, err = s.Next(); err == nil; _, err = s.Next() {
		i++
	}
	if err != io.EOF {
		t.Fatalf("expected %s, got %s", io.EOF.Error(), err.Error())
	}
	if i != 10 {
		t.Errorf("expected 10 lines, got %d", i)
	}
}

func TestFile10LinesOneEmpty(t *testing.T) {

	r := bytes.NewBufferString(File10LinesOneEmpty)

	s := NewScanner(r)

	var i int
	var err error
	// Scan until error is not nil
	for _, err = s.Next(); err == nil; _, err = s.Next() {
		i++
	}
	if err != io.EOF {
		t.Fatalf("expected %s, got %s", io.EOF.Error(), err.Error())
	}
	if i != 10 {
		t.Errorf("expected 10 lines, got %d", i)
	}
}
